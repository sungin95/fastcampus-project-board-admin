debug: false
management.endpoints.web.exposure.include: "*"


logging:
  level:
    com.fastcampus.projectboardadmin: debug
    org.springframework.web.servlet: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace
    org.springframework.web.client.RestTemplate: debug

server.port: 8081

spring:
  devtools.livereload.port: 35730
  datasource:
    url: ${MYSQL_DB_URL}
    username: ${MYSQL_DB_USERNAME}
    password: ${MYSQL_DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    open-in-view: false
    defer-datasource-initialization: true
    hibernate.ddl-auto: create
    show-sql: true
    properties:
      hibernate.format_sql: true
      hibernate.default_batch_fetch_size: 100
  sql.init.mode: always
  thymeleaf3.decoupled-logic: true
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_OAUTH_CLIENT_ID}
            client-secret: ${KAKAO_OAUTH_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            client-authentication-method: POST
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize # 인가 코드 받기 URL
            token-uri: https://kauth.kakao.com/oauth/token # 토큰 받기 URL
            user-info-uri: https://kapi.kakao.com/v2/user/me # 사용자 정보 가져오기 URL
            user-name-attribute: id

project.board.url: http://localhost:8080


---
spring:
  config.activate.on-profile: test
  # DB 연결
  datasource:
    # 설치된 H2 DB와 연결 URL
    url: jdbc:h2:mem:testdb

    # 접속을 위한 드라이버
    driver-class-name: org.h2.Driver
    # springboot 2.4 부터는 username이 꼭 있어야합니다. 없으면 에러가 발생합니다.
    username: sa
  jpa:
    # JPA가 수행하는 SQL을 볼 수 있다.
    show-sql: true
    # 객체를 보고 자동으로 테이블 생성 여부. 생성 - create, 비생성 - none
    # 테스트이기 때문에 create로 설정하며
    # 실제로는 none 으로 합니다. create이면 기존의 테이블을 전부 밀어버립니다.
    hibernate:
      ddl-auto: create
  # 콘솔 확인 을 위한 always
  output:
    ansi:
      enabled: always
# 파라미터 확인을 위한 trace
logging:
  level:
    org.hibernate.type: trace

